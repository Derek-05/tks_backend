Job Offering API Documentation
Base URL: localhost:8080/api/
Authentication:
* All endpoints require authentication using JWT token.
* Include the JWT token in the request header as Authorization: Bearer <token>.

Endpoints:
Get All Job Offerings
* URL: /allJobs
* Method: GET
* Description: Retrieves all job offerings with support for search and pagination.
* Query Parameters:
o pageNumber (optional): Page number for pagination (default: 1).
keyword (optional): Search keyword to filter job offerings by title.
Success Response:
Code: 200 OK
Content:
Json
{
    "success": true,
    "jobOfferings": [...],
    "page": 1,
    "pages": 3
}



Error Response:
Code: 400 Bad Request
Content:
json
{
    "success": false,
    "error": "Invalid page number"
}

Get Job Offering by ID
* URL: /job/:id
* Method: GET
* Description: Retrieves a single job offering by its Id.
* Success Response:
* Code: 200 OK
Content:
Json{
    "success": true,
    "jobOffering": {...}
}
Error Response:
Code: 404 Not Found
Content:
json{
    "success": false,
    "error": "Job not found"
}


Create Job Offering
* URL: /createJob
* Method: POST
* Description: Creates a new job offering with the provided data.
* Request Body:

      json{
    "title": "Software Engineer",
    "description": "Exciting opportunity for a skilled software engineer.",
    "salary": "Competitive",
    "qualifications": "Bachelor's degree in Computer Science.",
    "available": true,
    "applicationDeadline": "2024-02-28"
}

 Success Response:
Code: 201 Created
Content:
json{
   "success": true,
"newJobOffering": {...}
}




Update Job Offering by ID
* URL: /updateJob/:id
* Method: PUT
* Description: Updates an existing job offering by its ID with the provided data.
* Request Body: Same as create job offering.
* Success Response:
* Code: 200 OK
* Content:
json{
    "success": true,
    "data": {
        "updatedJob": {...}
    }

* Error Response:
* Code: 404 Not Found
* Content:
      json{
    "success": false,
    "error": "Job not found"
}




Delete Job Offering by ID
* URL: /deleteJob/:id
* Method: DELETE
* Description: Deletes a job offering by its ID.
* Success Response:
* Code: 200 OK
* Content:
json{
    "success": true,
    "message": "Job deleted"
}

* Error Response:
* Code: 404 Not Found
* Content:

json
{
    "success": false,
    "error": "Job not found"
}

